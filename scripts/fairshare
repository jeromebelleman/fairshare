#! /usr/bin/env python

import sys
from argparse import ArgumentParser, RawDescriptionHelpFormatter
import cx_Oracle
from datetime import datetime, timedelta
from time import mktime

COLS = { 'TIMESTAMP': 19,
         'PRIORITY': 10, # 9 + 1 for the comma
         'CPU': 13, # 12 + 1 for the comma
         'STARTED': 7,
         'WALL': 11,
       }

def connect(config):
    return cx_Oracle.connect(open(config).read().strip())

def find(args):
    # Connect to DB
    connection = connect(args.config)
    c = connection.cursor()

    # Query
    sql = "SELECT username FROM users WHERE username LIKE :u"
    c.execute(sql, ['%' + args.user])

    for username, in c:
        print username

def shares(args):
    # Connect to DB
    connection = connect(args.config)
    c = connection.cursor()

    # Query
    select = "SELECT timestamp, priority, started, cpu"
    tables = " FROM users NATURAL JOIN shares"
    where = " WHERE username = :u ORDER BY timestamp"
    sql = select + tables + where
    c.execute(sql, [args.user])

    table(c)

def table(cursor):
    # Headers
    for c, _, _, _, _, _, _ in cursor.description:
        print c + ' ' * (COLS[c] - len(c) + 1),
    print

    # Values
    for row in cursor:
        for col, (c, _, _, _, _, _, _) in zip(row, cursor.description):
            print str(col) + ' ' * (COLS[c] - len(str(col)) + 1),
        print

def main():
    # Arguments
    epilogue='''\
You would typically search a given user's charged group first:
% fairshare find fred
SHARE/XX/foo/fred
SHARE/XX/bar/fred

You could then list his share values over time for on of his give groups:
% fairshare shares SHARE/XX/bar/fred
TIMESTAMP            PRIORITY    STARTED  CPU           
2013-03-20 13:20:00  0.333       0        0.0           
2013-03-20 13:30:00  0.333       0        0.0           
2013-03-20 13:40:00  0.333       0        0.0           
2013-03-20 13:50:00  0.047       6        622.0         
2013-03-20 14:00:00  0.312       0        1029.7        
2013-03-20 14:10:00  0.312       0        1029.7        
2013-03-20 14:20:00  0.313       0        1006.2        
2013-03-20 14:30:00  0.313       0        982.3         
2013-03-20 14:40:00  0.313       0        982.3         
2013-03-20 14:50:00  0.314       0        959.0         
2013-03-20 15:00:00  0.314       0        936.3

Here, the user didn't have any job dispatched until 13:50 when 6 started. His
priority consequently decreased and his cumulative CPU usage increased. At
14:00, all of his jobs finished and his cumulative CPU usage, which had reached
a certain amount, subsequently started to decrease and his priority increase
again.'''

    p = ArgumentParser(description='Query fairshare information',
                       epilog=epilogue,
                       formatter_class=RawDescriptionHelpFormatter)
    p.add_argument('-c', '--config', help="config file",
                   default='/etc/fairshare')

    s = p.add_subparsers()

    # Find sub-command
    pfi = s.add_parser('find', help="find user's charged group")
    pfi.add_argument('user', help="username")
    pfi.set_defaults(func=find)

    # Shares sub-command
    psh = s.add_parser('shares',
                       help="print user's charged group share values over time")
    psh.add_argument('user', help="charged group")
    psh.set_defaults(func=shares)

    args = p.parse_args()
    args.func(args)

if __name__ == '__main__':
    sys.exit(main())

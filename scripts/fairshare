#! /usr/bin/env python

import sys
import argparse
import cx_Oracle
from datetime import datetime, timedelta
from time import mktime

COLS = { 'TIMESTAMP': 19,
         'PRIORITY': 10, # 9 + 1 for the comma
         'CPU': 13, # 12 + 1 for the comma
         'STARTED': 7,
         'WALL': 11,
       }

def connect(config):
    return cx_Oracle.connect(open(config).read().strip())

def find(args):
    # Connect to DB
    connection = connect(args.config)
    c = connection.cursor()

    # Query
    sql = "SELECT username FROM users WHERE username LIKE :u"
    c.execute(sql, ['%' + args.user])

    for username, in c:
        print username

def shares(args):
    # Connect to DB
    connection = connect(args.config)
    c = connection.cursor()

    # Query
    select = "SELECT timestamp, priority, started, cpu"
    tables = " FROM users NATURAL JOIN shares"
    where = " WHERE username = :u ORDER BY timestamp"
    sql = select + tables + where
    c.execute(sql, [args.user])

    table(c)

def table(cursor):
    # Headers
    for c, _, _, _, _, _, _ in cursor.description:
        print c + ' ' * (COLS[c] - len(c) + 1),
    print

    # Values
    for row in cursor:
        for col, (c, _, _, _, _, _, _) in zip(row, cursor.description):
            print str(col) + ' ' * (COLS[c] - len(str(col)) + 1),
        print

def main():
    # Arguments
    p = argparse.ArgumentParser(description='Query fairshare information')
    p.add_argument('-c', '--config', help="config file",
                   default='/etc/fairshare')

    s = p.add_subparsers()

    # Find sub-command
    pfi = s.add_parser('find', help="find user or group")
    pfi.add_argument('user', help="user or group")
    pfi.set_defaults(func=find)

    # Shares sub-command
    psh = s.add_parser('shares', help="print user's share values over time")
    psh.add_argument('user', help="user or group")
    psh.set_defaults(func=shares)

    args = p.parse_args()
    args.func(args)

if __name__ == '__main__':
    sys.exit(main())
